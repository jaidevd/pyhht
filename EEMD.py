import numpy as np
from scipy import interpolate

__all__ = 'EEMD'

def emd(data, extrapolation='mirror', nimfs=12, shifting_distance=0.2):
    """
    Perform a Ensemble Empirical Mode Decomposition on a data set.
    
    This function will return an array of all the Imperical Mode Functions as 
    defined in [1]_, which can be used for further Hilbert Spectral Analysis.
    
    The EEMD generates several noised signals generated by adding
    white noise to original signal, performs EMD on each noised signals and
    average the IMFs with the same mode from different noised signals. 
    
    Parameters
    ----------
    data : array_like
            Signal Data
    extrapolation : str, optional
            Sets the extrapolation method for edge effects. 
            Options: None
                     'mirror'
            Default: 'mirror'
    nimfs : int, optional
            Sets the maximum number of IMFs to be found
            Default : 12
    shifiting_distance : float, optional
            Sets the minimum variance between IMF iterations.
            Default : 0.2
    
    Returns
    -------
    IMFs : ndarray
            An array of shape (len(data),N) where N is the number of found IMFs
    
    Notes
    -----
    
    References
    ----------
    .. [1] 
    Zhaohua Wu, Norden E. Huang 2005 'Ensemble empirical mode decomposition:
    A noise assisted data analysis method'
    Advances in Adaptive Data Analysis 01, 1-41
    """

    return
